#! /bin/bash
# Try to auto-detect Boost
set -e # exit if a command fails
if [ -d "/usr/include/boost" ]; then
  BOOST_PATH="/usr/include"
elif [ -d "/usr/local/include/boost" ]; then
  BOOST_PATH="/usr/local/include"
elif [ -d "/opt/homebrew/include/boost" ]; then
  BOOST_PATH="/opt/homebrew/include"
elif [ -d "$HOME/.local/include/boost" ]; then
  BOOST_PATH="$HOME/.local/include"
else
  echo "Enter the path to Boost library..."
  read -e BOOST_PATH
fi

# Change into the directory of this script
OLDPWD=$(pwd)
cd "$(dirname "$0")" || exit 1
mkdir -p plots

printf "Compiling... \n"
g++ -std=c++17 -I $BOOST_PATH -O2 -I ./ gyro_vert_sim.cpp -o sim_gv.o
printf "Normal simultation \n"
./sim_gv.o --vel_meas_error OFF -o sim_gv.csv
python3 gyro_vert_sim_plot.py sim_gv.csv plots/sim_gv
printf "Simulation without Earth's rate correction and with velocity measurement error \n"
./sim_gv.o --earth_rate_correction OFF --vel_meas_error ON -o sim_gv.csv
python3 gyro_vert_sim_plot.py sim_gv.csv plots/sim_gv_earth_and_v
printf "Simulation with the dynamic tuning system OFF \n"
./sim_gv.o --dynamic_tuning OFF -o sim_gv.csv
python3 gyro_vert_sim_plot.py sim_gv.csv plots/sim_gv_dyn_tun
printf "Simulation without pitch corretion \n"
./sim_gv.o --pitch_correction OFF -o sim_gv.csv
python3 gyro_vert_sim_plot.py sim_gv.csv plots/sim_gv_pitch
printf "Simulation with velocity measurement error \n"
./sim_gv.o --vel_meas_error ON -o sim_gv.csv
python3 gyro_vert_sim_plot.py sim_gv.csv plots/sim_gv_v
rm sim_gv.o
rm sim_gv.csv

cd "$OLDPWD" || exit 1
